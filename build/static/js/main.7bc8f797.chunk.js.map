{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","import","className","content","onClick","request","axios","get","nonExisting","id","date","important","then","response","data","concat","newObject","post","put","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","toggleImportanceOf","find","n","changedNote","returnedNote","map","catch","error","setTimeout","message","key","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","length","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"uNAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,OACf,qBAAuB,iBAE3B,OACE,wBAAIC,UAAU,QACbJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCezB,EArBA,WACb,IAAMK,EAAUC,IAAMC,IAHR,UAIRC,EAAc,CAClBC,GAAI,IACJN,QAAS,mCACTO,KAAM,2BACNC,WAAW,GAEb,OAAON,EAAQO,KAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAOP,MAaxC,EAVA,SAAAQ,GAEb,OADgBV,IAAMW,KAdR,SAcsBD,GACrBJ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAQ5B,EALA,SAACL,EAAIO,GAElB,OADgBV,IAAMY,IAAN,UAnBF,SAmBE,YAAwBT,GAAMO,GAC/BJ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,Q,4NCjB3C,IAAMK,EAAS,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,wGA8GSC,EAzGH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,oBAAU,WACRC,IAEGvB,KAAK,SAAAwB,GACJT,EAASS,MAEZ,IAEH,IAAMC,EAAcP,EAChBJ,EACAA,EAAMY,OAAO,SAAAxC,GAAI,OAAIA,EAAKa,YAExB4B,EAAqB,SAAA9B,GACzB,IAAMX,EAAO4B,EAAMc,KAAK,SAAAC,GAAC,OAAIA,EAAEhC,KAAOA,IAChCiC,E,qVAAW,IAAQ5C,EAAR,CAAca,WAAYb,EAAKa,YAEhDwB,EACU1B,EAAIiC,GACX9B,KAAK,SAAA+B,GACJhB,EAASD,EAAMkB,IAAI,SAAA9C,GAAI,OAAIA,EAAKW,KAAOA,EAAKX,EAAO6C,OAEpDE,MAAM,SAAAC,GACLb,EAAgB,QAAD,OACLnC,EAAKK,QADA,qCAGf4C,WAAW,WACTd,EAAgB,OACf,KACHN,EAASD,EAAMY,OAAO,SAAAG,GAAC,OAAIA,EAAEhC,KAAOA,QA6C1C,OACE,6BACE,qCAEA,kBAhBiB,SAAC,GAAiB,IAAfuC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,yBAAK9C,UAAU,SACZ8C,IASH,CAAcA,QAAShB,IAEvB,6BACE,4BAAQ5B,QAAS,kBAAM2B,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BApDeO,EAAYO,IAAI,SAAA9C,GAAI,OACrC,kBAAC,EAAD,CACEmD,IAAKnD,EAAKW,GACVX,KAAMA,EACNC,iBAAkB,kBAAMwC,EAAmBzC,EAAKW,UAmDhD,0BAAMyC,SA3CM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBlD,QAASyB,EACTlB,MAAM,IAAI4C,MAAOC,cACjB5C,UAAW6C,KAAKC,SAAW,GAC3BhD,GAAIiB,EAAMgC,OAAS,GAGrBvB,EACUkB,GACPzC,KAAK,SAAA+B,GACJhB,EAASD,EAAMX,OAAO4B,IACtBd,EAAW,QA+BX,2BACE8B,MAAO/B,EACPgC,SAlDiB,SAACT,GACxBtB,EAAWsB,EAAMU,OAAOF,UAmDpB,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,Q,MClHNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7bc8f797.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.import\n    ? 'make not important' : \"make important\"\n\n  return (\n    <li className='note'>\n    {note.content}\n    <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note\n","import axios from 'axios'\nconst baseUrl = '/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }\n","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em> Note app, Department of Computer Science, University of Helsinki 2019</em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important}\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note ${note.content} was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const rows = () => notesToShow.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n      toggleImportance={() => toggleImportanceOf(note.id)}\n    />\n  )\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\n      <Notification message={errorMessage} />\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}